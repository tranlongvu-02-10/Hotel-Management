@using System.Diagnostics;
@model Team_Project_4.ViewModels.PaginatedList<Phong>
@{
    ViewData["Title"] = "Room List";
    Layout = "_ManagerLayout";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
<link rel="stylesheet" href="path/to/font-awesome/css/all.min.css" />

<style>
    /* Main container */
    .room-management-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 25px;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 25px rgba(0, 0, 0, 0.08);
    }

    /* Header */
    .display-4 {
        color: #2c3e50;
        font-weight: 600;
        text-align: center;
        margin-bottom: 30px;
        padding-bottom: 15px;
        position: relative;
    }

    .display-4:after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 100px;
        height: 4px;
        background: linear-gradient(to right, #3498db, #2ecc71);
        border-radius: 2px;
    }

    /* Search and action area */
    .search-action-area {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #f8fafc;
        padding: 15px 20px;
        border-radius: 10px;
        margin-bottom: 25px;
        border: 1px solid #eef2f6;
    }

    /* Form elements */
    .form-control, .form-select {
        border: 1px solid #e0e6ed;
        border-radius: 8px;
        padding: 10px 15px;
        transition: all 0.3s;
        background-color: #ffffff;
        box-shadow: inset 0 1px 3px rgba(0,0,0,0.03);
    }

    .form-control:focus, .form-select:focus {
        border-color: #3498db;
        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.15);
    }

    /* Buttons */
    .btn {
        border-radius: 8px;
        padding: 10px 20px;
        font-weight: 500;
        letter-spacing: 0.5px;
        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    }

    .btn-info {
        background-color: #3498db;
        border: none;
    }

    .btn-primary {
        background-color: #2ecc71;
        border: none;
        box-shadow: 0 2px 6px rgba(46, 204, 113, 0.3);
    }

    .btn-danger {
        background-color: #e74c3c;
        border: none;
        box-shadow: 0 2px 4px rgba(231, 76, 60, 0.2);
    }

    .btn-sm {
        padding: 8px 15px;
        font-size: 14px;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    /* Table */
    .table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        background: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 1px 15px rgba(0, 0, 0, 0.03);
    }

    .thead-dark {
        background: linear-gradient(135deg, #3498db, #2980b9);
    }

    .table th {
        padding: 16px;
        text-align: center;
        font-weight: 500;
        letter-spacing: 0.5px;
        color: white;
        border: none;
    }

    .table td {
        padding: 14px 16px;
        text-align: center;
        vertical-align: middle;
        border-bottom: 1px solid #f0f0f0;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(240, 248, 255, 0.5);
    }

    .table-striped tbody tr:hover {
        background-color: #f1f9ff;
    }

    /* Status */
    .status-available {
        color: #27ae60;
        font-weight: 600;
    }

    .status-occupied {
        color: #e74c3c;
        font-weight: 600;
    }

    /* Pagination */
    .pagination {
        margin-top: 30px;
    }

    .page-link {
        border-radius: 8px !important;
        margin: 0 5px;
        min-width: 40px;
        text-align: center;
        border: none;
        color: #3498db;
        box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    }

    .page-item.active .page-link {
        background-color: #3498db;
        color: white;
        border-color: #3498db;
    }

    .page-item.disabled .page-link {
        color: #95a5a6;
    }

    .page-item:not(.active):not(.disabled) .page-link:hover {
        background-color: #e8f4fc;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .search-action-area {
            flex-direction: column;
            gap: 15px;
        }
        
        .d-flex {
            width: 100%;
            flex-direction: column;
        }
        
        .form-control, .form-select {
            width: 100% !important;
            margin-left: 0 !important;
            margin-bottom: 10px;
        }
        
        .btn {
            width: 100%;
        }
    }
    /* Thêm vào phần CSS hiện có */
.table th a,
.table th {
    color: white !important;
}

.table th a:hover {
    color: white !important;
    text-decoration: none;
}

.table th i.fas {
    color: white !important;
    margin-left: 5px;
}
</style>

<div class="room-management-container">
    <div class="text-center">
        <h2 class="display-4">QUẢN LÝ PHÒNG</h2>
    </div>

    <div class="search-action-area">
        <form id="searchForm" asp-controller="Room" asp-action="RoomList" method="get" class="d-flex" style="width:468px">
            <div class="input-group">
                <input name="searchString" id="searchString" type="search" placeholder="Tìm tên phòng..." class="form-control rounded" aria-label="Search" style="width:200px">
                <button class="btn btn-info rounded" type="submit">
                    <i class="fas fa-search"></i>
                </button>
                <select id="roomType" name="roomType" class="form-select rounded" asp-items="ViewBag.RoomTypeList" style="margin-left: 20px;"></select>
            </div>
        </form>

        <a asp-action="Create" class="btn btn-primary rounded" asp-route-manager="@ViewBag.Manager">
            <i class="fas fa-plus"></i> Tạo phòng mới
        </a>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-bordered text-center">
            <thead class="thead-dark">
                <tr>
                    <th>
                        <a asp-action="RoomList" asp-route-sortOrder="@(ViewData["MaSortParam"]?.ToString())" asp-route-sortColumn="Map" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-currentFilter2="@ViewData["CurrentFilter2"]">STT<i class="fas fa-sort"></i></a>
                    </th>
                    <th>
                        <a asp-action="RoomList" asp-route-sortOrder="@(ViewData["TenSortParam"]?.ToString())" asp-route-sortColumn="Tenphong" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-currentFilter2="@ViewData["CurrentFilter2"]">Tên Phòng <i class="fas fa-sort"></i></a>
                    </th>
                    <th>Loại</th>
                    <th>Số khách</th>
                    <th>
                        <a asp-action="RoomList" asp-route-sortOrder="@(ViewData["DongiaSortParam"])" asp-route-sortColumn="Dongia" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-currentFilter2="@ViewData["CurrentFilter2"]">Đơn Giá <i class="fas fa-sort"></i></a>
                    </th>
                    <th>
                        <a asp-action="RoomList" asp-route-sortOrder="@(ViewData["TinhtrangSortParam"]?.ToString())" asp-route-sortColumn="Tinhtrang" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-currentFilter2="@ViewData["CurrentFilter2"]">Tình Trạng<i class="fas fa-sort"></i></a>
                    </th>
                    <th>Ghi Chú</th>
                    <th>Tác vụ</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var room in Model.Items)
                {
                    <tr>
                        <td>
                            @{
                                int currentPageNumber = int.Parse(ViewData["CurrentPageNumber"].ToString());
                                int index = Model.Items.IndexOf(room) + 1;

                                if ((currentPageNumber - 1) * 7 > 0)
                                {
                                    index += (currentPageNumber - 1) * 7;
                                }
                            }
                            @index
                        </td>
                        <td>@room.Tenphong</td>
                        <td>@room.MaloaiphongNavigation.Tenloai</td>
                        <td>@room.Soluongkhachtoida</td>
                        <td>@room.MaloaiphongNavigation.Dongia VND</td>
                        <td class="@(room.Tinhtrang==1 ? "status-available" : "status-occupied")">@(room.Tinhtrang==1 ? "Trống" : "Bận")</td>
                        <td>@room.Ghichu</td>
                        <td>
                            <a asp-action="Update" asp-route-roomid="@room.Map" class="btn btn-info btn-sm rounded" asp-route-manager="@ViewBag.Manager">Cập nhật</a>
                            <form asp-action="Delete" method="post" asp-route-roomid="@room.Map" asp-route-manager="@ViewBag.Manager" class="d-inline">
                                <button type="submit" class="btn btn-danger btn-sm rounded">Xóa</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="row">
        <div class="col-md-12 text-center">
            <nav>
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                        <a class="page-link" asp-route-pageNumber="1"
                           asp-route-SortOrder="@ViewData["SortOrder"]"
                           asp-route-sortColumn="@ViewData["sortColumn"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-currentFilter2="@ViewData["CurrentFilter2"]">
                            <span>Đầu</span>
                        </a>
                    </li>
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" asp-route-pageNumber="@(Model.PageIndex - 1)"
                           asp-route-SortOrder="@ViewData["SortOrder"]"
                           asp-route-sortColumn="@ViewData["sortColumn"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-currentFilter2="@ViewData["CurrentFilter2"]">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    </li>

                    @if (Model.TotalPages <= 5)
                    {
                        for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                <a class="page-link" asp-route-pageNumber="@i"
                                   asp-route-SortOrder="@ViewData["SortOrder"]"
                                   asp-route-sortColumn="@ViewData["sortColumn"]"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   asp-route-currentFilter2="@ViewData["CurrentFilter2"]">@i</a>
                            </li>
                        }
                    }
                    else
                    {
                        @if (Model.PageIndex <= 3)
                        {
                            for (int i = 1; i <= 5; i++)
                            {
                                <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                    <a class="page-link" asp-route-pageNumber="@i"
                                       asp-route-SortOrder="@ViewData["SortOrder"]"
                                       asp-route-sortColumn="@ViewData["sortColumn"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                       asp-route-currentFilter2="@ViewData["CurrentFilter2"]">@i</a>
                                </li>
                            }
                        }
                        else if (Model.PageIndex >= Model.TotalPages - 2)
                        {
                            for (int i = Model.TotalPages - 4; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                    <a class="page-link" asp-route-pageNumber="@i"
                                       asp-route-SortOrder="@ViewData["SortOrder"]"
                                       asp-route-sortColumn="@ViewData["sortColumn"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                       asp-route-currentFilter2="@ViewData["CurrentFilter2"]">@i</a>
                                </li>
                            }
                        }
                        else
                        {
                            for (int i = Model.PageIndex - 2; i <= Model.PageIndex + 2; i++)
                            {
                                <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                    <a class="page-link" asp-route-pageNumber="@i"
                                       asp-route-SortOrder="@ViewData["SortOrder"]"
                                       asp-route-sortColumn="@ViewData["sortColumn"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                       asp-route-currentFilter2="@ViewData["CurrentFilter2"]">@i</a>
                                </li>
                            }
                        }
                    }

                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" asp-route-pageNumber="@(Model.PageIndex + 1)"
                           asp-route-SortOrder="@ViewData["SortOrder"]"
                           asp-route-sortColumn="@ViewData["sortColumn"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-currentFilter2="@ViewData["CurrentFilter2"]">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>
                    <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-route-pageNumber="@Model.TotalPages"
                           asp-route-SortOrder="@ViewData["SortOrder"]"
                           asp-route-sortColumn="@ViewData["sortColumn"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-currentFilter2="@ViewData["CurrentFilter2"]">
                            <span>Cuối</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

<script>
    // Function to store selected room type and search string in local storage
    function storeRoomTypeAndSearchString() {
        const roomType = document.getElementById('roomType').value;
        const searchString = document.getElementById('searchString').value;
        localStorage.setItem('savedRoomType', roomType);
        localStorage.setItem('savedSearchString', searchString);
    }

    // Function to retrieve and set room type and search string from local storage
    function setRoomTypeAndSearchString() {
        const savedRoomType = localStorage.getItem('savedRoomType');
        const savedSearchString = localStorage.getItem('savedSearchString');
        if (savedRoomType) {
            document.getElementById('roomType').value = savedRoomType;
        }
        if (savedSearchString) {
            document.getElementById('searchString').value = savedSearchString;
        }
    }

    // Function to handle form submission
    function handleFormSubmission() {
        storeRoomTypeAndSearchString();
    }

    // Function to handle room type change
    function handleRoomTypeChange() {
        storeRoomTypeAndSearchString();
        document.getElementById('searchForm').submit();
    }

    // Populate room type and search string on page load
    window.onload = function () {
        setRoomTypeAndSearchString();
    };

    // Add event listener to form submission
    document.getElementById('searchForm').addEventListener('submit', function () {
        handleFormSubmission();
    });

    // Add event listener to room type change
    document.getElementById('roomType').addEventListener('change', function () {
        handleRoomTypeChange();
    });
</script>