@model List<Phong>
@{
    ViewData["Title"] = "Room Usage Report";
    Layout = "_ManagerLayout";
}
<style>
    /* Main container */
    .report-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 30px;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    }

    /* Header styling */
    h2 {
        color: #2c3e50;
        font-weight: 600;
        text-align: center;
        margin-bottom: 30px;
        padding-bottom: 15px;
        position: relative;
    }

    h2:after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 200px;
        height: 3px;
        background: linear-gradient(to right, #3498db, #2ecc71);
    }

    /* Filter section */
    .filter-section {
        display: flex;
        justify-content: center;
        margin-bottom: 25px;
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        width: 60%;
        margin-left: auto;
        margin-right: auto;
    }

    /* Month dropdown */
    #monthDropdown {
        padding: 10px 15px;
        font-size: 16px;
        border: 1px solid #e0e6ed;
        border-radius: 8px;
        background-color: white;
        transition: all 0.3s;
        width: 100px;
        text-align: center;
        margin-left: 10px;
    }

    #monthDropdown:focus {
        border-color: #3498db;
        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.15);
    }

    /* Table styling */
    .table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

    .thead-dark {
        background: linear-gradient(135deg, #3498db, #2980b9);
    }

    .table th {
        color: white !important;
        padding: 15px;
        text-align: center;
        font-weight: 500;
    }

    .table td {
        padding: 12px 15px;
        text-align: center;
        border-bottom: 1px solid #f0f0f0;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(240, 248, 255, 0.5);
    }

    .table-striped tbody tr:hover {
        background-color: #f1f9ff;
    }

    /* Percentage styling */
    .percentage {
        font-weight: 500;
        color: #2ecc71;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .report-container {
            padding: 20px;
        }
        
        .filter-section {
            width: 100%;
            flex-direction: column;
            align-items: center;
        }
        
        #monthDropdown {
            margin-left: 0;
            margin-top: 10px;
            width: 100%;
        }
    }
</style>

<div class="report-container">
    <h2>BÁO CÁO TỶ LỆ SỬ DỤNG PHÒNG</h2>

    <div class="filter-section">
        <form id="searchForm" asp-controller="Room" asp-action="RoomUsageReport" method="get" class="d-flex">
            <div class="input-group" style="display: flex; align-items: center;">
                <label style="margin-right: 10px; font-weight: 500;">Tháng</label>
                <select name="month" class="rounded" id="monthDropdown" onchange="handleMonthChange()"></select>
            </div>
            <input type="hidden" name="selectedMonth" id="selectedMonth" />
        </form>
    </div>

    <table class="table table-striped table-bordered text-center">
        <thead class="thead-dark">
            <tr>
                <th>STT</th>
                <th>Phòng</th>
                <th>Số ngày thuê trong tháng</th>
                <th>Tỷ Lệ</th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.Count(); i++)
            {
                var room = Model[i];
                <tr>
                    <td>@(i + 1)</td>
                    <td>@room.Tenphong</td>
                    <td>@room.Songayo</td>
                    <td class="percentage">
                        @if (ViewBag.RoomUsageMonth >= 1 && ViewBag.RoomUsageMonth <= 12)
                        {
                            var totalDaysInMonth = DateTime.DaysInMonth(DateTime.Now.Year, ViewBag.RoomUsageMonth);
                            var usageRate = (double)room.Songayo / totalDaysInMonth * 100;
                            <text>@Math.Round(usageRate, 2)%</text>
                        }
                        else
                        {
                            <span>Invalid Month</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>
<script>
    jQuery(document).ready(function ($) {
        var table = $('.table').DataTable({
            paging: false,
            searching: false,
            order: [[3, 'desc']],
            language: {
                url: "//cdn.datatables.net/plug-ins/1.11.5/i18n/vi.json"
            }
        });
    });

    function populateMonthDropdown(selectedMonth) {
        const monthDropdown = document.querySelector("#monthDropdown");
        monthDropdown.innerHTML = "";

        const totalMonths = 12;

        for (let i = 1; i <= totalMonths; i++) {
            const option = document.createElement("option");
            option.value = i;
            option.textContent = i;
            if (i === parseInt(selectedMonth)) {
                option.selected = true;
            }
            monthDropdown.appendChild(option);
        }
    }

    function handleMonthChange() {
        const monthDropdown = document.querySelector("#monthDropdown");
        const selectedMonth = monthDropdown.value;

        document.getElementById("selectedMonth").value = selectedMonth;
        document.getElementById("searchForm").submit();
    }

    window.onload = function () {
        const selectedMonth = "@(ViewBag.RoomUsageMonth ?? DateTime.Today.Month)";
        populateMonthDropdown(selectedMonth);
    };
</script>