@model IEnumerable<Team_Project_4.ViewModels.SaleReportViewModel>;
@{
    ViewData["Title"] = "Sale Report";
    Layout = "_ManagerLayout";
}

<style>
    /* Main container */
    .report-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 30px;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    }

    /* Header styling */
    .display-4 {
        color: #2c3e50;
        font-weight: 600;
        text-align: center;
        margin-bottom: 30px;
        padding-bottom: 15px;
        position: relative;
    }

    .display-4:after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 150px;
        height: 3px;
        background: linear-gradient(to right, #3498db, #2ecc71);
    }

    /* Filter section */
    .filter-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
    }

    /* Month dropdown */
    #monthDropdown {
        padding: 10px 15px;
        font-size: 16px;
        border: 1px solid #e0e6ed;
        border-radius: 8px;
        background-color: white;
        transition: all 0.3s;
        width: 100px;
        text-align: center;
    }

    #monthDropdown:focus {
        border-color: #3498db;
        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.15);
    }

    /* Table styling */
    .table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

    .thead-dark {
        background: linear-gradient(135deg, #3498db, #2980b9);
    }

    .table th {
        padding: 15px;
        text-align: center;
        font-weight: 500;
        color: white;
    }

    .table td {
        padding: 12px 15px;
        text-align: center;
        border-bottom: 1px solid #f0f0f0;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(240, 248, 255, 0.5);
    }

    .table-striped tbody tr:hover {
        background-color: #f1f9ff;
    }

    /* Sort icon */
    .fa-sort {
        margin-left: 5px;
        color: white;
    }

    /* Percentage styling */
    .percentage {
        font-weight: 500;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .report-container {
            padding: 20px;
        }
        
        .filter-section {
            flex-direction: column;
            gap: 15px;
        }
        
        #monthDropdown {
            width: 100%;
        }
    }
    .table th,
    .table th a {
        color: white !important;
    }

    .table th a:hover {
        color: white !important;
        text-decoration: none;
    }

    .fa-sort {
        color: white !important;
    }
</style>

<div class="report-container">
    <div class="text-center">
        <h2 class="display-4">BÁO CÁO DOANH THU</h2>
    </div>
    
    <div class="filter-section">
        <form id="searchForm" asp-controller="SaleReport" asp-action="Index" method="post" class="d-flex">
            <div class="input-group" style="display: flex; align-items: center;">
                <label style="margin-right: 10px; font-weight: 500;">Tháng</label>
                <select name="month" id="monthDropdown"></select>
            </div>
        </form>
    </div>

    <table class="table table-striped table-bordered text-center">
        <thead class="thead-dark">
            <tr>
                <th>STT</th>
                <th>Loại phòng</th>
                <th>Doanh thu</th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@(ViewData["TyleSortParam"]?.ToString())" asp-route-sortColumn="Tenphong" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-currentFilter2="@ViewData["CurrentFilter2"]">Tỷ lệ<i class="fas fa-sort"></i></a>
                </th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.Count(); i++)
            {
                var salereport = Model.ElementAt(i);
                <tr>
                    <td>@(i + 1)</td>
                    <td>@salereport.loaiphongNavigation.Tenloai</td>
                    <td>@salereport.doanhThu.ToString("N0") VND</td>
                    <td class="percentage">@((salereport.tyle * 100).ToString("0.00"))%</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    // Function to populate the month dropdown
    function populateMonthDropdown(selectedMonth) {
        const monthDropdown = document.querySelector("#monthDropdown");
        monthDropdown.innerHTML = "";

        const totalMonths = 12; // Total months in a year

        for (let i = 1; i <= totalMonths; i++) {
            const option = document.createElement("option");
            option.value = i;
            option.textContent = i;
            if (i === parseInt(selectedMonth)) {
                option.selected = true;
            }
            monthDropdown.appendChild(option);
        }
    }

    function handleMonthChange() {
        const monthDropdown = document.querySelector("#monthDropdown");
        const selectedMonth = monthDropdown.value;

        // Submit the form when the dropdown value changes
        document.getElementById("searchForm").action = `/SaleReport/Index?month=${selectedMonth}`;
        document.getElementById("searchForm").submit();
    }

    // Call this function to populate the month dropdown
    window.onload = function () {
        const selectedMonth = "@(ViewBag.Month ?? DateTime.Today.Month)";

        populateMonthDropdown(selectedMonth);
        document.querySelector("#monthDropdown").addEventListener("change", handleMonthChange);
    };
</script>