@model Team_Project_4.ViewModels.PaginatedList<Khachhang>
@{
    ViewData["Title"] = "Client List";
    Layout = "_ManagerLayout";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
<link rel="stylesheet" href="path/to/font-awesome/css/all.min.css" />

<style>
    /* Main container */
    .client-management-container {
        padding: 25px;
        background-color: #f5f7fa;
    }

    /* Header styling */
    .client-header {
        color: #2c3e50;
        font-weight: 600;
        text-align: center;
        margin-bottom: 30px;
        padding-bottom: 15px;
        position: relative;
    }

    .client-header:after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 100px;
        height: 3px;
        background: linear-gradient(to right, #3498db, #2c3e50);
    }

    /* Search and action area */
    .client-action-area {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: white;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 20px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    /* Search form styling */
    .client-search-form {
        display: flex;
        align-items: center;
        gap: 10px;
        background-color: white;
        border-radius: 20px;
        padding: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .client-search-input {
        border: none;
        border-radius: 20px;
        padding: 8px 15px;
        width: 220px;
        background: transparent;
    }

    .client-search-input:focus {
        outline: none;
        box-shadow: none;
    }

    .client-search-btn {
        border-radius: 20px;
        background-color: #3498db;
        border: none;
        color: white;
        padding: 8px 15px;
        transition: all 0.3s;
    }

    .client-search-btn:hover {
        background-color: #2980b9;
    }

    /* Client type dropdown */
    .client-type-select {
        border: none;
        border-radius: 20px;
        padding: 8px 15px;
        background: transparent;
    }

    /* Add new button */
    .add-client-btn {
        background-color: #2ecc71;
        color: white;
        border: none;
        border-radius: 20px;
        padding: 8px 20px;
        font-weight: 500;
        transition: all 0.3s;
    }

    .add-client-btn:hover {
        background-color: #27ae60;
    }

    /* Table styling */
    .client-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        background: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 1px 10px rgba(0, 0, 0, 0.05);
    }

    .client-table thead {
        background: linear-gradient(to right, #3498db, #2c3e50);
        color: white;
    }

    .client-table th {
        padding: 15px;
        text-align: center;
        font-weight: 500;
        border: none;
    }

    .client-table th a {
        color: white;
        text-decoration: none;
    }

    .client-table td {
        padding: 12px 15px;
        text-align: center;
        border-bottom: 1px solid #f0f0f0;
    }

    .client-table tr:nth-child(even) {
        background-color: rgba(52, 152, 219, 0.05);
    }

    .client-table tr:hover {
        background-color: rgba(52, 152, 219, 0.1);
    }

    /* Action buttons */
    .client-action-btn {
        border-radius: 20px;
        padding: 5px 12px;
        font-size: 13px;
        margin: 0 3px;
        transition: all 0.3s;
        border: none;
        color: white;
    }

    .update-client-btn {
        background-color: #3498db;
    }

    .update-client-btn:hover {
        background-color: #2980b9;
    }

    .delete-client-btn {
        background-color: #e74c3c;
    }

    .delete-client-btn:hover {
        background-color: #c0392b;
    }

    /* Pagination styling */
    .client-pagination {
        margin-top: 25px;
    }

    .client-pagination .page-item .page-link {
        border-radius: 20px !important;
        margin: 0 3px;
        border: 1px solid #e0e0e0;
        color: #3498db;
    }

    .client-pagination .page-item.active .page-link {
        background-color: #3498db;
        color: white;
        border-color: #3498db;
    }

    .client-pagination .page-item.disabled .page-link {
        color: #95a5a6;
    }

    /* Error message */
    .client-error-message {
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
        background-color: #f8d7da;
        color: #721c24;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .client-action-area {
            flex-direction: column;
            gap: 15px;
        }
        
        .client-search-form {
            width: 100%;
        }
        
        .client-search-input {
            width: 100%;
        }
        
        .client-type-select {
            width: 100%;
        }
        
        .add-client-btn {
            width: 100%;
        }
    }
</style>

<div class="client-management-container">
    <div class="text-center">
        <h2 class="client-header">QUẢN LÝ THÔNG TIN KHÁCH HÀNG</h2>
    </div>

    <div class="client-action-area">
        <form id="searchForm" asp-controller="Client" asp-action="ClientList" method="get" class="client-search-form">
            <input name="searchString" id="searchString" type="search" placeholder="Tìm tên khách hàng..." class="form-control client-search-input">
            <button class="btn btn-info client-search-btn" type="submit">
                <i class="fas fa-search"></i>
            </button>
            <select id="clientType" name="clientType" class="form-select client-type-select" asp-items="ViewBag.ClientTypeList"></select>
        </form>

        <a asp-action="Create" class="btn btn-primary add-client-btn" asp-route-manager="@(TempData["Manager"].ToString())">
            <i class="fas fa-plus"></i> Thêm khách hàng mới
        </a>
    </div>

    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger client-error-message">
            <i class="fas fa-exclamation-circle me-2"></i> @ViewBag.ErrorMessage
        </div>
    }

    <div class="table-responsive">
        <table class="table table-striped table-bordered text-center client-table">
            <thead class="thead-dark">
                <tr>
                    <th>
                        <a asp-action="ClientList" asp-route-sortOrder="@(ViewData["MaSortParam"]?.ToString())" asp-route-sortColumn="Makh" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-currentFilter2="@ViewData["CurrentFilter2"]">STT<i class="fas fa-sort"></i></a>
                    </th>
                    <th>
                        <a asp-action="ClientList" asp-route-sortOrder="@(ViewData["TenSortParam"]?.ToString())" asp-route-sortColumn="Tenkh" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-currentFilter2="@ViewData["CurrentFilter2"]">Tên Khách Hàng <i class="fas fa-sort"></i></a>
                    </th>
                    <th>CMND</th>
                    <th>
                        <a asp-action="ClientList" asp-route-sortOrder="@(ViewData["TuoiSortParam"])" asp-route-sortColumn="Tuoi" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-currentFilter2="@ViewData["CurrentFilter2"]">Tuổi <i class="fas fa-sort"></i></a>
                    </th>
                    <th>Loại Khách</th>
                    <th>SĐT</th>
                    <th>Địa chỉ</th>
                    <th>Tác vụ</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var client in Model.Items)
                {
                    <tr>
                        <td>@(Model.Items.IndexOf(client)+1)</td>
                        <td>@client.Tenkh</td>
                        <td>@client.Cmndkh</td>
                        <td>@client.Tuoi</td>
                        <td>@client.MaloaikhachNavigation.Tenloaikhach</td>                              
                        <td>@client.Tel</td>      
                        <td>@client.Diachikh</td>
                        <td>
                            <a asp-action="Update" asp-route-clientid="@client.Makh" class="btn btn-info btn-sm client-action-btn update-client-btn">Cập nhật</a>
                            <form asp-action="Delete" asp-route-clientid="@client.Makh" class="d-inline">
                                <input type="hidden" name="manager" value="@(TempData["Manager"].ToString())" />
                                <button type="submit" class="btn btn-danger btn-sm client-action-btn delete-client-btn">Xóa</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="row client-pagination">
        <div class="col-md-12 text-center">
            <nav>
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                        <a class="page-link" asp-route-pageNumber="1"
                           asp-route-SortOrder="@ViewData["SortOrder"]"
                           asp-route-sortColumn="@ViewData["sortColumn"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-currentFilter2="@ViewData["CurrentFilter2"]">
                            <span>Đầu</span>
                        </a>
                    </li>
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" asp-route-pageNumber="@(Model.PageIndex - 1)"
                           asp-route-SortOrder="@ViewData["SortOrder"]"
                           asp-route-sortColumn="@ViewData["sortColumn"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-currentFilter2="@ViewData["CurrentFilter2"]">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    </li>

                    @if (Model.TotalPages <= 5)
                    {
                        for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                <a class="page-link" asp-route-pageNumber="@i"
                                   asp-route-SortOrder="@ViewData["SortOrder"]"
                                   asp-route-sortColumn="@ViewData["sortColumn"]"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   asp-route-currentFilter2="@ViewData["CurrentFilter2"]">@i</a>
                            </li>
                        }
                    }
                    else
                    {
                        @if (Model.PageIndex <= 3)
                        {
                            for (int i = 1; i <= 5; i++)
                            {
                                <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                    <a class="page-link" asp-route-pageNumber="@i"
                                       asp-route-SortOrder="@ViewData["SortOrder"]"
                                       asp-route-sortColumn="@ViewData["sortColumn"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                       asp-route-currentFilter2="@ViewData["CurrentFilter2"]">@i</a>
                                </li>
                            }
                        }
                        else if (Model.PageIndex >= Model.TotalPages - 2)
                        {
                            for (int i = Model.TotalPages - 4; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                    <a class="page-link" asp-route-pageNumber="@i"
                                       asp-route-SortOrder="@ViewData["SortOrder"]"
                                       asp-route-sortColumn="@ViewData["sortColumn"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                       asp-route-currentFilter2="@ViewData["CurrentFilter2"]">@i</a>
                                </li>
                            }
                        }
                        else
                        {
                            for (int i = Model.PageIndex - 2; i <= Model.PageIndex + 2; i++)
                            {
                                <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                    <a class="page-link" asp-route-pageNumber="@i"
                                       asp-route-SortOrder="@ViewData["SortOrder"]"
                                       asp-route-sortColumn="@ViewData["sortColumn"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                       asp-route-currentFilter2="@ViewData["CurrentFilter2"]">@i</a>
                                </li>
                            }
                        }
                    }

                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" asp-route-pageNumber="@(Model.PageIndex + 1)"
                           asp-route-SortOrder="@ViewData["SortOrder"]"
                           asp-route-sortColumn="@ViewData["sortColumn"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-currentFilter2="@ViewData["CurrentFilter2"]">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>
                    <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-route-pageNumber="@Model.TotalPages"
                           asp-route-SortOrder="@ViewData["SortOrder"]"
                           asp-route-sortColumn="@ViewData["sortColumn"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-currentFilter2="@ViewData["CurrentFilter2"]">
                            <span>Cuối</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

<script>
    // Function to store selected client type and search string in local storage
    function storeClientTypeAndSearchString() {
        const clientType = document.getElementById('clientType').value;
        const searchString = document.getElementById('searchString').value;
        localStorage.setItem('savedClientType', clientType);
        localStorage.setItem('savedSearchString', searchString);
    }

    // Function to retrieve and set client type and search string from local storage
    function setClientTypeAndSearchString() {
        const savedClientType = localStorage.getItem('savedClientType');
        const savedSearchString = localStorage.getItem('savedSearchString');
        if (savedClientType) {
            document.getElementById('clientType').value = savedClientType;
        }
        if (savedSearchString) {
            document.getElementById('searchString').value = savedSearchString;
        }
    }

    // Function to handle form submission
    function handleFormSubmission() {
        storeClientTypeAndSearchString();
    }

    // Function to handle client type change
    function handleClientTypeChange() {
        storeClientTypeAndSearchString();
        document.getElementById('searchForm').submit();
    }

    // Populate client type and search string on page load
    window.onload = function () {
        setClientTypeAndSearchString();
    };

    // Add event listener to form submission
    document.getElementById('searchForm').addEventListener('submit', function () {
        handleFormSubmission();
    });

    // Add event listener to client type change
    document.getElementById('clientType').addEventListener('change', function () {
        handleClientTypeChange();
    });
</script>